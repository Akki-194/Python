1. What is the output of the following code?
nums = set([1,1,2,3,3,3,4,4])
print(len(nums))
Answer: 4

2. What will be the output?
d = {"john":40, "peter":45}
print(list(d.keys()))
Answer: ['john', 'peter']

3. A website requires a user to input username and password to register. Write a program to check the validity of password given by user:
Answer:
def is_valid_password(password):
    if not (6 <= len(password) <= 12):
        return False
    if not re.search(r'[a-z]', password):
        return False
    if not re.search(r'[0-9]', password):
        return False
    if not re.search(r'[A-Z]', password):
        return False
    if not re.search(r'[$#@]', password):
        return False
    return True

4. Write a for loop that prints all elements of a list and their position in the list.
Answer:
a = [4, 7, 3, 2, 5, 9]
for index, value in enumerate(a):
    print(f"Position: {index}, Value: {value}")

5. Write a program that accepts a string from console and prints the characters that have even indexes.
Answer:
input_string = input("Enter a string: ")
even_index_chars = input_string[::2]
print(even_index_chars)

6. Write a program that accepts a string from console and prints it in reverse order.
Answer:
input_string = input("Enter a string: ")
reversed_string = input_string[::-1]
print(reversed_string)

7. Write a program which counts and prints the number of occurrences of each character in a string input by console.
Answer:
from collections import Counter
input_string = input("Enter a string: ")
char_count = Counter(input_string)
for char in sorted(char_count):
    print(f"{char},{char_count[char]}")

8. With two given lists [1, 3, 6, 78, 35, 55] and [12, 24, 35, 24, 88, 120, 155], write a program to create a list whose elements are the intersection of the two lists.
Answer:
list1 = [1, 3, 6, 78, 35, 55]
list2 = [12, 24, 35, 24, 88, 120, 155]
set1 = set(list1)
set2 = set(list2)
intersection = list(set1 & set2)
print(intersection)

9. Given the list [12, 24, 35, 24, 88, 120, 155, 88, 120, 155], write a program to print the list after removing all duplicate values with original order reserved.
Answer:
input_list = [12, 24, 35, 24, 88, 120, 155, 88, 120, 155]
seen = set()
result = []
for item in input_list:
    if item not in seen:
        result.append(item)
        seen.add(item)
print(result)

10. Using list comprehension, write a program to print the list after removing the value 24 in [12, 24, 35, 24, 88, 120, 155].
Answer:
input_list = [12, 24, 35, 24, 88, 120, 155]
filtered_list = [x for x in input_list if x != 24]
print(filtered_list)

11. Using list comprehension, write a program to print the list after removing the 0th, 4th, and 5th elements in [12, 24, 35, 70, 88, 120, 155].
Answer:
input_list = [12, 24, 35, 70, 88, 120, 155]
filtered_list = [x for i, x in enumerate(input_list) if i not in (0, 4, 5)]
print(filtered_list)

12. Using list comprehension, write a program to remove numbers divisible by both 5 and 7 in [12, 24, 35, 70, 88, 120, 155].
Answer:
input_list = [12, 24, 35, 70, 88, 120, 155]
filtered_list = [x for x in input_list if x % 35 != 0]
print(filtered_list)

13. Write a program to randomly generate a list with 5 numbers, which are divisible by both 5 and 7, between 1 and 1000 inclusive.
Answer:
import random
def generate_divisible_numbers(start, end, divisor):
    return [num for num in range(start, end + 1) if num % divisor == 0]
numbers = generate_divisible_numbers(1, 1000, 35)
random_numbers = random.sample(numbers, 5)
print(random_numbers)

14. Write a program to compute 1/2 + 2/3 + 3/4 + ... + n/(n+1) with a given n input by console (n > 0).
Answer:
n = int(input("Enter a positive integer n: "))
if n <= 0:
    print("n should be greater than 0.")
else:
    series_sum = sum(i / (i + 1) for i in range(1, n + 1))
    print(f"{series_sum:.2f}")
